{"ast":null,"code":"import _defineProperty from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { extname, resolve } from 'path';\nimport { FileContext } from '@/contexts/FileSystem';\nimport { getAppNameByExtension } from '@/utils/programs';\nimport { getDirectory, getDirectoryEntry } from '@/utils/filemanager';\nimport { ProcessContext } from '@/contexts/ProcessManager';\nimport { SessionContext } from '@/contexts/SessionManager';\nimport { useContext, useEffect, useState } from 'react';\nimport { useFileDrop } from '@/utils/events';\n\nvar FileManager = function FileManager(_ref) {\n  var directoryPath = _ref.path,\n      render = _ref.render,\n      _ref$details = _ref.details,\n      details = _ref$details === void 0 ? false : _ref$details,\n      onChange = _ref.onChange;\n\n  var _useState = useState(directoryPath),\n      cwd = _useState[0],\n      cd = _useState[1];\n\n  var _useState2 = useState([]),\n      entries = _useState2[0],\n      setEntries = _useState2[1];\n\n  var fs = useContext(FileContext);\n\n  var _useContext = useContext(ProcessContext),\n      load = _useContext.load,\n      open = _useContext.open;\n\n  var _useContext2 = useContext(SessionContext),\n      foreground = _useContext2.foreground,\n      getState = _useContext2.getState;\n\n  var fileDropHandler = useFileDrop( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dragEvent, file) {\n      var processsId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return load(file, getState({\n                name: file.name\n              }), dragEvent.target);\n\n            case 2:\n              processsId = _context.sent;\n              foreground(processsId);\n              fs.writeFile(\"\".concat(cwd, \"/\").concat(file.name), file);\n              _context.t0 = setEntries;\n              _context.t1 = [];\n              _context.t2 = _toConsumableArray(entries);\n              _context.next = 10;\n              return getDirectoryEntry(fs, cwd, file.name, details);\n\n            case 10:\n              _context.t3 = _context.sent;\n              _context.t4 = [_context.t3];\n              _context.t5 = _context.t1.concat.call(_context.t1, _context.t2, _context.t4);\n              (0, _context.t0)(_context.t5);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  var onDoubleClick = function onDoubleClick(_ref3) {\n    var path = _ref3.path,\n        url = _ref3.url,\n        _ref3$icon = _ref3.icon,\n        icon = _ref3$icon === void 0 ? '' : _ref3$icon,\n        _ref3$name = _ref3.name,\n        name = _ref3$name === void 0 ? '' : _ref3$name;\n    return function (event) {\n      if (path && !path.includes('.url') && (path === '..' || !extname(path))) {\n        cd(path === '..' ? resolve(cwd, '..') : path);\n      } else {\n        var appUrl = url || path || '';\n        var processsId = open(_objectSpread({\n          url: appUrl,\n          icon: icon,\n          name: name\n        }, appUrl ? {\n          appName: getAppNameByExtension(extname(appUrl))\n        } : {}), getState({\n          name: name\n        }), event.currentTarget);\n\n        if (processsId) {\n          foreground(processsId);\n          onChange === null || onChange === void 0 ? void 0 : onChange();\n        }\n      }\n    };\n  };\n\n  useEffect(function () {\n    getDirectory(fs, cwd, details, setEntries);\n    onChange === null || onChange === void 0 ? void 0 : onChange(cwd);\n  }, [fs, cwd]);\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, fileDropHandler), {}, {\n    children: render({\n      entries: entries,\n      onDoubleClick: onDoubleClick,\n      cwd: cwd\n    })\n  }));\n};\n\nexport default FileManager;","map":null,"metadata":{},"sourceType":"module"}