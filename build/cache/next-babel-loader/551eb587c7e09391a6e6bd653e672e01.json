{"ast":null,"code":"import _defineProperty from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport dynamic from 'next/dynamic';\nimport { extname } from 'path';\nimport { isValidUrl } from '@/utils/url';\nimport { loaderOptions as blogLoaderOptions } from '@/components/Programs/Blog';\nimport { loaderOptions as dosLoaderOptions } from '@/components/Programs/Dos';\nimport { loaderOptions as explorerLoaderOptions } from '@/components/Programs/Explorer';\nimport { loaderOptions as webampLoaderOptions } from '@/components/Programs/WebODF';\nimport { loaderOptions as winampLoaderOptions } from '@/components/Programs/Winamp';\nimport { ROOT_DIRECTORY } from '@/utils/constants';\nvar Blog = dynamic(function () {\n  return import('@/components/Programs/Blog');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@/components/Programs/Blog')];\n    },\n    modules: ['@/components/Programs/Blog']\n  }\n});\nvar Dos = dynamic(function () {\n  return import('@/components/Programs/Dos');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@/components/Programs/Dos')];\n    },\n    modules: ['@/components/Programs/Dos']\n  }\n});\nvar Explorer = dynamic(function () {\n  return import('@/components/Programs/Explorer');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@/components/Programs/Explorer')];\n    },\n    modules: ['@/components/Programs/Explorer']\n  }\n});\nvar WebODF = dynamic(function () {\n  return import('@/components/Programs/WebODF');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@/components/Programs/WebODF')];\n    },\n    modules: ['@/components/Programs/WebODF']\n  }\n});\nvar Winamp = dynamic(function () {\n  return import('@/components/Programs/Winamp');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@/components/Programs/Winamp')];\n    },\n    modules: ['@/components/Programs/Winamp']\n  }\n});\nvar appLoaders = {\n  blog: {\n    loader: Blog,\n    loaderOptions: blogLoaderOptions\n  },\n  dos: {\n    loader: Dos,\n    loaderOptions: dosLoaderOptions\n  },\n  explorer: {\n    loader: Explorer,\n    loaderOptions: explorerLoaderOptions\n  },\n  webodf: {\n    loader: WebODF,\n    loaderOptions: webampLoaderOptions\n  },\n  winamp: {\n    loader: Winamp,\n    loaderOptions: winampLoaderOptions\n  }\n};\nexport var getAppNameByExtension = function getAppNameByExtension(ext) {\n  switch (ext) {\n    case '.jsdos':\n    case '.zip':\n      return 'DOS';\n\n    case '.odt':\n      return 'WebODF';\n\n    case '.mp3':\n    case '.m3u':\n    case '.wsz':\n      return 'Winamp';\n\n    default:\n      return '';\n  }\n};\n\nvar appLoaderByName = function appLoaderByName(name) {\n  return appLoaders[name];\n};\n\nvar appLoaderByFileType = function appLoaderByFileType(appFile, ext, searchParams) {\n  var extName = ext || extname(appFile.url);\n\n  if (!extName) {\n    return _objectSpread(_objectSpread({}, appLoaders.explorer), {}, {\n      loadedAppOptions: {\n        file: appFile\n      }\n    });\n  }\n\n  var appLoader = appLoaders[getAppNameByExtension(extName).toLowerCase()];\n\n  if (appLoader) {\n    return _objectSpread(_objectSpread({}, appLoader), {}, {\n      loadedAppOptions: {\n        file: appFile,\n        args: searchParams\n      }\n    });\n  }\n\n  return undefined;\n};\n\nexport var appLoader = function appLoader(appFile) {\n  var ext = appFile.ext,\n      url = appFile.url;\n\n  if (isValidUrl(url)) {\n    var _URL = new URL(url),\n        pathname = _URL.pathname,\n        searchParams = _URL.searchParams;\n\n    return pathname === ROOT_DIRECTORY ? appLoaderByName(searchParams.get('app') || '') : appLoaderByFileType(appFile, ext || extname(pathname), searchParams);\n  }\n\n  return appLoaderByFileType(appFile);\n};","map":null,"metadata":{},"sourceType":"module"}