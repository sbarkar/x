{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styles from '@/styles/System/Taskbar/Clock.module.scss';\nimport { formatToDate, formatToShortDateTime, formatToTime, isMidnight, newDate } from '@/utils/dates';\nimport { memo, useEffect, useState } from 'react';\nimport { MILLISECONDS_IN_SECOND } from '@/utils/constants';\n\nvar millisecondsTillNextSecond = function millisecondsTillNextSecond() {\n  return MILLISECONDS_IN_SECOND - newDate().getMilliseconds();\n};\n\nvar Clock = function Clock() {\n  var initialDate = newDate();\n\n  var _useState = useState(formatToDate(initialDate)),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(formatToTime(initialDate)),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(formatToShortDateTime(initialDate)),\n      dateTime = _useState3[0],\n      setDateTime = _useState3[1];\n\n  var updateClock = function updateClock() {\n    var currentDate = newDate();\n    var newTime = formatToTime(currentDate);\n    setTime(newTime);\n\n    if (isMidnight(newTime)) {\n      setDate(formatToDate(currentDate));\n      setDateTime(formatToShortDateTime(currentDate));\n    }\n  };\n\n  useEffect(function () {\n    var clockIntervalId;\n    setTimeout(function () {\n      updateClock();\n      clockIntervalId = setInterval(updateClock, MILLISECONDS_IN_SECOND);\n    }, millisecondsTillNextSecond());\n    return function () {\n      clearInterval(clockIntervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(\"time\", {\n    className: styles.clock,\n    dateTime: dateTime,\n    title: date,\n    suppressHydrationWarning: true,\n    children: time\n  });\n};\n\nexport default /*#__PURE__*/memo(Clock);","map":null,"metadata":{},"sourceType":"module"}