{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styles from '@/styles/System/WindowManager/WindowManager.module.scss';\nimport dynamic from 'next/dynamic';\nimport { motion } from 'framer-motion';\nimport useWindow from '@/hooks/useWindow';\nconst Window = dynamic(() => import('@/components/System/WindowManager/Window'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('@/components/System/WindowManager/Window')],\n    modules: ['@/components/System/WindowManager/Window']\n  }\n});\n\nconst ProcessWindow = (_ref) => {\n  let {\n    loader: {\n      loader: App,\n      loadedAppOptions,\n      loaderOptions\n    },\n    bgColor,\n    icon,\n    name,\n    url,\n    windowed\n  } = _ref,\n      processProps = _objectWithoutProperties(_ref, [\"loader\", \"bgColor\", \"icon\", \"name\", \"url\", \"windowed\"]);\n\n  const {\n    motions,\n    settings\n  } = useWindow({\n    processProps,\n    loaderOptions\n  });\n  const {\n    height,\n    width,\n    zIndex\n  } = settings;\n\n  const AppComponent = /*#__PURE__*/_jsx(App, _objectSpread(_objectSpread({\n    url: url\n  }, loadedAppOptions), settings));\n\n  return /*#__PURE__*/_jsx(motion.article, _objectSpread(_objectSpread({\n    className: styles.animatedWindows,\n    style: {\n      height,\n      width,\n      zIndex\n    }\n  }, motions), {}, {\n    children: windowed ? /*#__PURE__*/_jsx(Window, _objectSpread(_objectSpread({\n      icon: icon,\n      name: name,\n      bgColor: bgColor\n    }, settings), {}, {\n      children: AppComponent\n    })) : AppComponent\n  }));\n};\n\nexport default ProcessWindow;","map":null,"metadata":{},"sourceType":"module"}