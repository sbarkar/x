{"ast":null,"code":"import _defineProperty from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styles from '@/styles/System/Taskbar/TaskbarEntry.module.scss';\nimport Icon from '@/components/System/Icon';\nimport { cycleWindowState } from '@/utils/taskbar';\nimport { motion } from 'framer-motion';\nimport { ProcessContext } from '@/contexts/ProcessManager';\nimport { SessionContext } from '@/contexts/SessionManager';\nimport { taskbarEntriesMotionSettings } from '@/utils/motions';\nimport { useCallback, useContext } from 'react';\n\nvar TaskbarEntry = function TaskbarEntry(_ref) {\n  var icon = _ref.icon,\n      id = _ref.id,\n      minimized = _ref.minimized,\n      name = _ref.name;\n\n  var _useContext = useContext(SessionContext),\n      foreground = _useContext.foreground,\n      foregroundId = _useContext.session.foregroundId;\n\n  var _useContext2 = useContext(ProcessContext),\n      minimize = _useContext2.minimize,\n      restore = _useContext2.restore,\n      taskbarElement = _useContext2.taskbarElement;\n\n  var refCallback = useCallback(function (element) {\n    return taskbarElement(id, element);\n  }, [id]);\n\n  var onBlur = function onBlur() {\n    return foreground('');\n  };\n\n  var onClick = useCallback(function () {\n    return cycleWindowState({\n      foregroundId: foregroundId,\n      id: id,\n      minimized: minimized,\n      foreground: foreground,\n      minimize: minimize,\n      restore: restore\n    });\n  }, [foregroundId, id, minimized]);\n  return /*#__PURE__*/_jsx(motion.li, _objectSpread(_objectSpread({}, taskbarEntriesMotionSettings), {}, {\n    children: /*#__PURE__*/_jsx(\"button\", {\n      className: \"\".concat(styles.taskbarEntry, \" \").concat(foregroundId === id && styles.foreground),\n      type: \"button\",\n      ref: refCallback,\n      onBlur: onBlur,\n      onClick: onClick,\n      tabIndex: -1,\n      children: /*#__PURE__*/_jsxs(\"figure\", {\n        children: [/*#__PURE__*/_jsx(Icon, {\n          src: icon,\n          height: 16,\n          width: 16\n        }), /*#__PURE__*/_jsx(\"figcaption\", {\n          children: name\n        })]\n      })\n    })\n  }));\n};\n\nexport default TaskbarEntry;","map":null,"metadata":{},"sourceType":"module"}