{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styles from '@/styles/System/Taskbar/TaskbarEntry.module.scss';\nimport Icon from '@/components/System/Icon';\nimport { cycleWindowState } from '@/utils/taskbar';\nimport { motion } from 'framer-motion';\nimport { ProcessContext } from '@/contexts/ProcessManager';\nimport { SessionContext } from '@/contexts/SessionManager';\nimport { taskbarEntriesMotionSettings } from '@/utils/motions';\nimport { useCallback, useContext } from 'react';\n\nconst TaskbarEntry = ({\n  icon,\n  id,\n  minimized,\n  name\n}) => {\n  const {\n    foreground,\n    session: {\n      foregroundId\n    }\n  } = useContext(SessionContext);\n  const {\n    minimize,\n    restore,\n    taskbarElement\n  } = useContext(ProcessContext);\n  const refCallback = useCallback(element => taskbarElement(id, element), [id]);\n\n  const onBlur = () => foreground('');\n\n  const onClick = useCallback(() => cycleWindowState({\n    foregroundId,\n    id,\n    minimized,\n    foreground,\n    minimize,\n    restore\n  }), [foregroundId, id, minimized]);\n  return /*#__PURE__*/_jsx(motion.li, _objectSpread(_objectSpread({}, taskbarEntriesMotionSettings), {}, {\n    children: /*#__PURE__*/_jsx(\"button\", {\n      className: `${styles.taskbarEntry} ${foregroundId === id && styles.foreground}`,\n      type: \"button\",\n      ref: refCallback,\n      onBlur: onBlur,\n      onClick: onClick,\n      tabIndex: -1,\n      children: /*#__PURE__*/_jsxs(\"figure\", {\n        children: [/*#__PURE__*/_jsx(Icon, {\n          src: icon,\n          height: 16,\n          width: 16\n        }), /*#__PURE__*/_jsx(\"figcaption\", {\n          children: name\n        })]\n      })\n    })\n  }));\n};\n\nexport default TaskbarEntry;","map":null,"metadata":{},"sourceType":"module"}