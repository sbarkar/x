{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styles from '@/styles/System/Taskbar/Clock.module.scss';\nimport { formatToDate, formatToShortDateTime, formatToTime, isMidnight, newDate } from '@/utils/dates';\nimport { memo, useEffect, useState } from 'react';\nimport { MILLISECONDS_IN_SECOND } from '@/utils/constants';\n\nconst millisecondsTillNextSecond = () => MILLISECONDS_IN_SECOND - newDate().getMilliseconds();\n\nconst Clock = () => {\n  const initialDate = newDate();\n  const {\n    0: date,\n    1: setDate\n  } = useState(formatToDate(initialDate));\n  const {\n    0: time,\n    1: setTime\n  } = useState(formatToTime(initialDate));\n  const {\n    0: dateTime,\n    1: setDateTime\n  } = useState(formatToShortDateTime(initialDate));\n\n  const updateClock = () => {\n    const currentDate = newDate();\n    const newTime = formatToTime(currentDate);\n    setTime(newTime);\n\n    if (isMidnight(newTime)) {\n      setDate(formatToDate(currentDate));\n      setDateTime(formatToShortDateTime(currentDate));\n    }\n  };\n\n  useEffect(() => {\n    let clockIntervalId;\n    setTimeout(() => {\n      updateClock();\n      clockIntervalId = setInterval(updateClock, MILLISECONDS_IN_SECOND);\n    }, millisecondsTillNextSecond());\n    return () => {\n      clearInterval(clockIntervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(\"time\", {\n    className: styles.clock,\n    dateTime: dateTime,\n    title: date,\n    suppressHydrationWarning: true,\n    children: time\n  });\n};\n\nexport default /*#__PURE__*/memo(Clock);","map":null,"metadata":{},"sourceType":"module"}