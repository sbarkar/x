{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport styles from '@/styles/System/Taskbar/StartMenu.module.scss';\nimport ButtonBar from '@/components/System/Taskbar/ButtonBar';\nimport FileManager from '@/components/System/FileManager/FileManager';\nimport MenuView from '@/components/System/FileManager/MenuView';\nimport { createPortal } from 'react-dom';\nimport { faWindows } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getNextContainerElement } from '@/utils/elements';\nimport { useEffect, useRef, useState } from 'react';\n\nvar StartMenu = function StartMenu(_ref) {\n  var taskbarRef = _ref.taskbarRef;\n\n  var _useState = useState(false),\n      showMenu = _useState[0],\n      setShowMenu = _useState[1];\n\n  var startButtonRef = useRef(null);\n  var menuRef = useRef(null);\n  var buttonsRef = useRef(null);\n\n  var _useState2 = useState(false),\n      mounted = _useState2[0],\n      setMounted = _useState2[1];\n\n  useEffect(function () {\n    return setMounted(true);\n  }, []);\n  return mounted ? /*#__PURE__*/createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n    children: [showMenu && /*#__PURE__*/_jsxs(\"nav\", {\n      className: styles.menu,\n      ref: menuRef,\n      tabIndex: -1,\n      children: [/*#__PURE__*/_jsx(ButtonBar, {\n        startButtonRef: startButtonRef,\n        buttonsRef: buttonsRef,\n        setShowMenu: setShowMenu\n      }), /*#__PURE__*/_jsx(FileManager, {\n        path: \"/start\",\n        render: MenuView,\n        onChange: function onChange(cwd) {\n          return !cwd && setShowMenu(false);\n        }\n      })]\n    }), /*#__PURE__*/_jsx(\"button\", {\n      ref: startButtonRef,\n      className: \"\".concat(styles.start, \" \").concat(showMenu && styles.menuOpen),\n      type: \"button\",\n      title: \"Start\",\n      onClick: function onClick() {\n        return setShowMenu(!showMenu);\n      },\n      onBlur: function onBlur(_ref2) {\n        var _menuRef$current, _buttonsRef$current;\n\n        var relatedTarget = _ref2.relatedTarget;\n\n        if (taskbarRef.current === relatedTarget || ((_menuRef$current = menuRef.current) === null || _menuRef$current === void 0 ? void 0 : _menuRef$current.contains(relatedTarget))) {\n          var _startButtonRef$curre;\n\n          startButtonRef === null || startButtonRef === void 0 ? void 0 : (_startButtonRef$curre = startButtonRef.current) === null || _startButtonRef$curre === void 0 ? void 0 : _startButtonRef$curre.focus();\n        } else if (!((_buttonsRef$current = buttonsRef.current) === null || _buttonsRef$current === void 0 ? void 0 : _buttonsRef$current.contains(relatedTarget))) {\n          setShowMenu(false);\n        }\n      },\n      children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n        icon: faWindows\n      })\n    })]\n  }), getNextContainerElement()) : null;\n};\n\nexport default StartMenu;","map":null,"metadata":{},"sourceType":"module"}