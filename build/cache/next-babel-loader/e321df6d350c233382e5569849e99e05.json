{"ast":null,"code":"import publicStats from 'public_stats.json';\nvar bytesInKB = 1024;\nvar fileSizes = ['bytes', 'KB', 'MB', 'GB', 'TB'];\nexport var getFileIcon = function getFileIcon(filePath, ext) {\n  switch (ext) {\n    case '.jpg':\n    case '.jpeg':\n    case '.png':\n    case '.ico':\n    case '.svg':\n      return filePath;\n\n    case '.jsdos':\n      return '/icons/programs/dos.png';\n\n    case '.js':\n    case '.json':\n      return '/icons/files/js.svg';\n\n    case '.mp3':\n    case '.m3u':\n    case '.wsz':\n      return '/icons/programs/winamp.png';\n\n    default:\n      return '/icons/files/unknown.svg';\n  }\n};\nexport var getFileKind = function getFileKind(ext) {\n  switch (ext) {\n    case '.txt':\n      return 'Plain Text';\n\n    case '.json':\n      return 'JSON Document';\n\n    case '.ico':\n      return 'Icon Image';\n\n    case '.woff2':\n      return 'Web Font';\n\n    case '.zip':\n      return 'ZIP Archive';\n\n    case '.mp3':\n      return 'MP3 Audio';\n\n    case '.js':\n      return 'JS Document';\n\n    case '.wsz':\n      return 'Winamp Skin';\n\n    case '.url':\n      return 'Shortcut';\n\n    default:\n      return '';\n  }\n};\nexport var getFileStat = function getFileStat(path) {\n  return publicStats[path] || {};\n};\nexport var getFormattedSize = function getFormattedSize(size) {\n  if (size === -1) return 'Unknown';\n  if (size === 0) return 'Zero bytes';\n  if (size === 1) return '1 byte';\n  var sizeFactor = Math.floor(Math.log(size) / Math.log(bytesInKB));\n  var newSize = Math.round(size / Math.pow(bytesInKB, sizeFactor));\n  return \"\".concat(newSize, \" \").concat(fileSizes[sizeFactor]);\n};","map":null,"metadata":{},"sourceType":"module"}