{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CLICK_DELAY_IN_MILLISECONDS } from '@/utils/constants';\n\nconst haltEvent = event => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nexport const useFileDrop = onFileDrop => ({\n  onDragLeave: event => haltEvent(event),\n  onDragEnter: event => haltEvent(event),\n  onDragOver: event => haltEvent(event),\n  onDrop: event => {\n    const {\n      dataTransfer: {\n        files: [file] = []\n      } = {}\n    } = event;\n    haltEvent(event);\n    onFileDrop(event, file);\n  }\n});\nexport const onTouchEventsOnly = e => {\n  if (e instanceof MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n};\nexport class ClickHandler {\n  constructor({\n    singleClick,\n    doubleClick\n  }) {\n    _defineProperty(this, \"clickTimer\", void 0);\n\n    _defineProperty(this, \"singleClick\", void 0);\n\n    _defineProperty(this, \"doubleClick\", void 0);\n\n    _defineProperty(this, \"clickHandler\", event => {\n      if (!this.clickTimer) {\n        this.clickTimer = setTimeout(() => {\n          var _this$singleClick;\n\n          this.clickTimer = undefined;\n          (_this$singleClick = this.singleClick) === null || _this$singleClick === void 0 ? void 0 : _this$singleClick.call(this, event);\n        }, CLICK_DELAY_IN_MILLISECONDS);\n      } else {\n        var _this$doubleClick;\n\n        clearTimeout(this.clickTimer);\n        this.clickTimer = undefined;\n        (_this$doubleClick = this.doubleClick) === null || _this$doubleClick === void 0 ? void 0 : _this$doubleClick.call(this, event);\n      }\n    });\n\n    this.singleClick = singleClick;\n    this.doubleClick = doubleClick;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}