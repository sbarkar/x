{"ast":null,"code":"import _defineProperty from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport WAVES from '@/public/libs/vanta.waves.min';\nimport * as THREE from 'three';\nimport Color from 'color';\nimport { MILLISECONDS_IN_SECOND } from '@/utils/constants';\nimport { useEffect } from 'react';\n\nvar wallpaperColor = function wallpaperColor(h) {\n  return Color(\"hsl(\".concat(h, \", 40%, 15%)\")).rgbNumber();\n};\n\nvar fps = 20;\nvar updateIntervalInMilliseconds = MILLISECONDS_IN_SECOND / fps;\nvar initialColor = 200;\nvar vantaJsSettings = {\n  gyroControls: false,\n  mouseControls: false,\n  touchControls: false,\n  color: wallpaperColor(initialColor),\n  shininess: 35,\n  waveHeight: 15,\n  waveSpeed: 0.25,\n  zoom: 0.95\n};\n\nvar initRainbowEffect = function initRainbowEffect(wallpaperEffect) {\n  var then = Date.now();\n  var base = initialColor;\n  var colorUpdateAnimationId;\n\n  var updateColor = function updateColor() {\n    var now = Date.now();\n    var delta = now - then;\n\n    if (delta > updateIntervalInMilliseconds) {\n      base = base > 360 ? 0 : base + 1;\n      then = now - delta % updateIntervalInMilliseconds;\n      /* eslint no-param-reassign: off */\n\n      wallpaperEffect.options.color = wallpaperColor(base);\n    }\n\n    colorUpdateAnimationId = requestAnimationFrame(updateColor);\n  };\n\n  colorUpdateAnimationId = requestAnimationFrame(updateColor);\n  return function () {\n    cancelAnimationFrame(colorUpdateAnimationId);\n  };\n};\n\nvar renderWallpaperEffect = function renderWallpaperEffect(_ref) {\n  var renderElement = _ref.current;\n  var wallpaperEffect = WAVES(_objectSpread({\n    el: renderElement,\n    THREE: THREE\n  }, vantaJsSettings));\n  var cancelRainbowEffect = initRainbowEffect(wallpaperEffect);\n  wallpaperEffect.onDestroy = cancelRainbowEffect;\n  return wallpaperEffect;\n};\n\nvar useWallpaper = function useWallpaper(desktopRef) {\n  useEffect(function () {\n    var wallpaperEffect = renderWallpaperEffect(desktopRef);\n    return function () {\n      wallpaperEffect === null || wallpaperEffect === void 0 ? void 0 : wallpaperEffect.destroy();\n    };\n  }, []);\n};\n\nexport default useWallpaper;","map":null,"metadata":{},"sourceType":"module"}