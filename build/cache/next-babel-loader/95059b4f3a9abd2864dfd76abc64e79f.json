{"ast":null,"code":"import { TASKBAR_HEIGHT, WINDOW_PADDING } from '@/utils/constants';\nexport const getMaxDimensions = (width, height, defaultWidth = 0, defaultHeight = 0, lockAspectRatio = false) => {\n  if (width === defaultWidth && height === defaultHeight) {\n    const PADDING = WINDOW_PADDING * 2;\n    let maxWidth = window.innerWidth - PADDING;\n    let maxHeight = window.innerHeight - TASKBAR_HEIGHT - PADDING;\n\n    if (lockAspectRatio) {\n      const aspectLockedHeight = height / width * Math.min(maxWidth, width);\n\n      if (aspectLockedHeight > maxHeight) {\n        maxWidth = maxHeight / (height / width);\n      } else {\n        maxHeight = aspectLockedHeight;\n      }\n    }\n\n    return {\n      height: Math.ceil(Math.min(maxHeight, height)),\n      width: Math.ceil(Math.min(maxWidth, width))\n    };\n  }\n\n  return {\n    height,\n    width\n  };\n};\nexport const getNextVisibleWindow = (processes, stackOrder) => {\n  const visibleProcessId = stackOrder.find(stackId => processes.find(process => process.id === stackId && !process.minimized));\n  return visibleProcessId || '';\n};","map":null,"metadata":{},"sourceType":"module"}