{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const getProcessId = name => name.toLowerCase().replace(/ /g, '_');\nexport class Process {\n  constructor({\n    loader,\n    icon,\n    name,\n    launchElement,\n    bgColor = '#fff',\n    height = 0,\n    id = getProcessId(name),\n    lockAspectRatio = false,\n    width = 0,\n    windowed = true,\n    x = 0,\n    y = 0,\n    taskbarElement\n  }) {\n    _defineProperty(this, \"loader\", void 0);\n\n    _defineProperty(this, \"icon\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"launchElement\", void 0);\n\n    _defineProperty(this, \"bgColor\", void 0);\n\n    _defineProperty(this, \"height\", void 0);\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"lockAspectRatio\", void 0);\n\n    _defineProperty(this, \"width\", void 0);\n\n    _defineProperty(this, \"windowed\", void 0);\n\n    _defineProperty(this, \"maximized\", false);\n\n    _defineProperty(this, \"minimized\", false);\n\n    _defineProperty(this, \"url\", '');\n\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"taskbarElement\", void 0);\n\n    this.loader = loader;\n    this.icon = icon;\n    this.name = name;\n    this.launchElement = launchElement;\n    this.bgColor = bgColor;\n    this.height = height;\n    this.id = id;\n    this.lockAspectRatio = lockAspectRatio;\n    this.width = width;\n    this.windowed = windowed;\n    this.x = x;\n    this.y = y;\n    this.taskbarElement = taskbarElement;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}