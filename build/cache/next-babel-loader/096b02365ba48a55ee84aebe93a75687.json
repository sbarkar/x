{"ast":null,"code":"!function (t, e) {\n  'object' == typeof exports && 'object' == typeof module ? module.exports = e() : 'function' == typeof define && define.amd ? define([], e) : 'object' == typeof exports ? exports._vantaEffect = e() : t._vantaEffect = e();\n}('undefined' != typeof self ? self : this, function () {\n  return function (t) {\n    var e = {};\n\n    function i(s) {\n      if (e[s]) return e[s].exports;\n      var o = e[s] = {\n        i: s,\n        l: !1,\n        exports: {}\n      };\n      return t[s].call(o.exports, o, o.exports, i), o.l = !0, o.exports;\n    }\n\n    return i.m = t, i.c = e, i.d = function (t, e, s) {\n      i.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: s\n      });\n    }, i.r = function (t) {\n      'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: 'Module'\n      }), Object.defineProperty(t, '__esModule', {\n        value: !0\n      });\n    }, i.t = function (t, e) {\n      if (1 & e && (t = i(t)), 8 & e) return t;\n      if (4 & e && 'object' == typeof t && t && t.__esModule) return t;\n      var s = Object.create(null);\n      if (i.r(s), Object.defineProperty(s, 'default', {\n        enumerable: !0,\n        value: t\n      }), 2 & e && 'string' != typeof t) for (var o in t) i.d(s, o, function (e) {\n        return t[e];\n      }.bind(null, o));\n      return s;\n    }, i.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return i.d(e, 'a', e), e;\n    }, i.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, i.p = '', i(i.s = 17);\n  }({\n    0: function (t, e, i) {\n      'use strict';\n\n      function s(t, e) {\n        for (let i in e) e.hasOwnProperty(i) && (t[i] = e[i]);\n\n        return t;\n      }\n\n      function o() {\n        return 'undefined' != typeof navigator ? /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth < 600 : null;\n      }\n\n      i.d(e, 'c', function () {\n        return s;\n      }), i.d(e, 'e', function () {\n        return o;\n      }), i.d(e, 'i', function () {\n        return n;\n      }), i.d(e, 'h', function () {\n        return r;\n      }), i.d(e, 'g', function () {\n        return h;\n      }), i.d(e, 'f', function () {\n        return a;\n      }), i.d(e, 'a', function () {\n        return c;\n      }), i.d(e, 'b', function () {\n        return u;\n      }), i.d(e, 'd', function () {\n        return l;\n      }), Number.prototype.clamp = function (t, e) {\n        return Math.min(Math.max(this, t), e);\n      };\n\n      const n = t => t[Math.floor(Math.random() * t.length)];\n\n      function r(t, e) {\n        return null == t && (t = 0), null == e && (e = 1), t + Math.random() * (e - t);\n      }\n\n      function h(t, e) {\n        return null == t && (t = 0), null == e && (e = 1), Math.floor(t + Math.random() * (e - t + 1));\n      }\n\n      const a = t => document.querySelector(t),\n            c = t => 'number' == typeof t ? '#' + ('00000' + t.toString(16)).slice(-6) : t,\n            u = (t, e = 1) => {\n        const i = c(t),\n              s = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(i),\n              o = s ? {\n          r: parseInt(s[1], 16),\n          g: parseInt(s[2], 16),\n          b: parseInt(s[3], 16)\n        } : null;\n        return 'rgba(' + o.r + ',' + o.g + ',' + o.b + ',' + e + ')';\n      },\n            l = t => 0.299 * t.r + 0.587 * t.g + 0.114 * t.b;\n    },\n    1: function (t, e, i) {\n      'use strict';\n\n      i.d(e, 'a', function () {\n        return r;\n      });\n      var s = i(0);\n      const o = false;\n      let n = o && window.THREE || {};\n      o && !window.VANTA && (window.VANTA = {});\n      const r = o && window.VANTA || {};\n      r.register = (t, e) => r[t] = t => new e(t), r.version = '0.5.18';\n\n      const h = function () {\n        return Array.prototype.unshift.call(arguments, '[VANTA]'), console.error.apply(this, arguments);\n      };\n\n      r.VantaBase = class {\n        constructor(t = {}) {\n          if (!o) return !1;\n          r.current = this, this.windowMouseMoveWrapper = this.windowMouseMoveWrapper.bind(this), this.windowTouchWrapper = this.windowTouchWrapper.bind(this), this.windowGyroWrapper = this.windowGyroWrapper.bind(this), this.resize = this.resize.bind(this), this.animationLoop = this.animationLoop.bind(this), this.restart = this.restart.bind(this);\n          const e = 'function' == typeof this.getDefaultOptions ? this.getDefaultOptions() : this.defaultOptions;\n          if (this.options = Object(s.c)({\n            mouseControls: !0,\n            touchControls: !0,\n            gyroControls: !1,\n            minHeight: 200,\n            minWidth: 200,\n            scale: 1,\n            scaleMobile: 1\n          }, e), (t instanceof HTMLElement || 'string' == typeof t) && (t = {\n            el: t\n          }), Object(s.c)(this.options, t), this.options.THREE && (n = this.options.THREE), this.el = this.options.el, null == this.el) h('Instance needs \"el\" param!');else if (!(this.options.el instanceof HTMLElement)) {\n            const t = this.el;\n            if (this.el = Object(s.f)(t), !this.el) return void h('Cannot find element', t);\n          }\n          this.prepareEl(), this.initThree(), this.setSize();\n\n          try {\n            this.init();\n          } catch (t) {\n            return h('Init error', t), this.renderer && this.renderer.domElement && this.el.removeChild(this.renderer.domElement), void (this.options.backgroundColor && (console.log('[VANTA] Falling back to backgroundColor'), this.el.style.background = Object(s.a)(this.options.backgroundColor)));\n          }\n\n          this.initMouse(), this.resize(), this.animationLoop();\n          const i = window.addEventListener;\n          i('resize', this.resize), window.requestAnimationFrame(this.resize), this.options.mouseControls && (i('scroll', this.windowMouseMoveWrapper), i('mousemove', this.windowMouseMoveWrapper)), this.options.touchControls && (i('touchstart', this.windowTouchWrapper), i('touchmove', this.windowTouchWrapper)), this.options.gyroControls && i('deviceorientation', this.windowGyroWrapper);\n        }\n\n        setOptions(t = {}) {\n          Object(s.c)(this.options, t), this.triggerMouseMove();\n        }\n\n        prepareEl() {\n          let t, e;\n          if ('undefined' != typeof Node && Node.TEXT_NODE) for (t = 0; t < this.el.childNodes.length; t++) {\n            const e = this.el.childNodes[t];\n\n            if (e.nodeType === Node.TEXT_NODE) {\n              const t = document.createElement('span');\n              t.textContent = e.textContent, e.parentElement.insertBefore(t, e), e.remove();\n            }\n          }\n\n          for (t = 0; t < this.el.children.length; t++) e = this.el.children[t], 'static' === getComputedStyle(e).position && (e.style.position = 'relative'), 'auto' === getComputedStyle(e).zIndex && (e.style.zIndex = 1);\n\n          'static' === getComputedStyle(this.el).position && (this.el.style.position = 'relative');\n        }\n\n        applyCanvasStyles(t, e = {}) {\n          Object(s.c)(t.style, {\n            position: 'absolute',\n            zIndex: 0,\n            top: 0,\n            left: 0,\n            background: ''\n          }), Object(s.c)(t.style, e), t.classList.add('vanta-canvas');\n        }\n\n        initThree() {\n          n.WebGLRenderer ? (this.renderer = new n.WebGLRenderer({\n            alpha: !0,\n            antialias: !0\n          }), this.el.appendChild(this.renderer.domElement), this.applyCanvasStyles(this.renderer.domElement), isNaN(this.options.backgroundAlpha) && (this.options.backgroundAlpha = 1), this.scene = new n.Scene()) : console.warn('[VANTA] No THREE defined on window');\n        }\n\n        getCanvasElement() {\n          return this.renderer ? this.renderer.domElement : this.p5renderer ? this.p5renderer.canvas : void 0;\n        }\n\n        getCanvasRect() {\n          const t = this.getCanvasElement();\n          return !!t && t.getBoundingClientRect();\n        }\n\n        windowMouseMoveWrapper(t) {\n          const e = this.getCanvasRect();\n          if (!e) return !1;\n          const i = t.clientX - e.left,\n                s = t.clientY - e.top;\n          i >= 0 && s >= 0 && i <= e.width && s <= e.height && (this.mouseX = i, this.mouseY = s, this.options.mouseEase || this.triggerMouseMove(i, s));\n        }\n\n        windowTouchWrapper(t) {\n          const e = this.getCanvasRect();\n          if (!e) return !1;\n\n          if (1 === t.touches.length) {\n            const i = t.touches[0].clientX - e.left,\n                  s = t.touches[0].clientY - e.top;\n            i >= 0 && s >= 0 && i <= e.width && s <= e.height && (this.mouseX = i, this.mouseY = s, this.options.mouseEase || this.triggerMouseMove(i, s));\n          }\n        }\n\n        windowGyroWrapper(t) {\n          const e = this.getCanvasRect();\n          if (!e) return !1;\n          const i = Math.round(2 * t.alpha) - e.left,\n                s = Math.round(2 * t.beta) - e.top;\n          i >= 0 && s >= 0 && i <= e.width && s <= e.height && (this.mouseX = i, this.mouseY = s, this.options.mouseEase || this.triggerMouseMove(i, s));\n        }\n\n        triggerMouseMove(t, e) {\n          void 0 === t && void 0 === e && (this.options.mouseEase ? (t = this.mouseEaseX, e = this.mouseEaseY) : (t = this.mouseX, e = this.mouseY)), this.uniforms && (this.uniforms.iMouse.value.x = t / this.scale, this.uniforms.iMouse.value.y = e / this.scale);\n          const i = t / this.width,\n                s = e / this.height;\n          'function' == typeof this.onMouseMove && this.onMouseMove(i, s);\n        }\n\n        setSize() {\n          this.scale || (this.scale = 1), Object(s.e)() && this.options.scaleMobile ? this.scale = this.options.scaleMobile : this.options.scale && (this.scale = this.options.scale), this.width = Math.max(this.el.offsetWidth, this.options.minWidth), this.height = Math.max(this.el.offsetHeight, this.options.minHeight);\n        }\n\n        initMouse() {\n          (!this.mouseX && !this.mouseY || this.mouseX === this.options.minWidth / 2 && this.mouseY === this.options.minHeight / 2) && (this.mouseX = this.width / 2, this.mouseY = this.height / 2, this.triggerMouseMove(this.mouseX, this.mouseY));\n        }\n\n        resize() {\n          this.setSize(), this.camera && (this.camera.aspect = this.width / this.height, 'function' == typeof this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix()), this.renderer && (this.renderer.setSize(this.width, this.height), this.renderer.setPixelRatio(window.devicePixelRatio / this.scale)), 'function' == typeof this.onResize && this.onResize();\n        }\n\n        isOnScreen() {\n          const t = this.el.offsetHeight,\n                e = this.el.getBoundingClientRect(),\n                i = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop,\n                s = e.top + i;\n          return s - window.innerHeight <= i && i <= s + t;\n        }\n\n        animationLoop() {\n          return this.t || (this.t = 0), this.t += 1, this.t2 || (this.t2 = 0), this.t2 += this.options.speed || 1, this.uniforms && (this.uniforms.iTime.value = 0.016667 * this.t2), this.options.mouseEase && (this.mouseEaseX = this.mouseEaseX || this.mouseX || 0, this.mouseEaseY = this.mouseEaseY || this.mouseY || 0, Math.abs(this.mouseEaseX - this.mouseX) + Math.abs(this.mouseEaseY - this.mouseY) > 0.1 && (this.mouseEaseX += 0.05 * (this.mouseX - this.mouseEaseX), this.mouseEaseY += 0.05 * (this.mouseY - this.mouseEaseY), this.triggerMouseMove(this.mouseEaseX, this.mouseEaseY))), (this.isOnScreen() || this.options.forceAnimate) && ('function' == typeof this.onUpdate && this.onUpdate(), this.scene && this.camera && (this.renderer.render(this.scene, this.camera), this.renderer.setClearColor(this.options.backgroundColor, this.options.backgroundAlpha)), this.fps && this.fps.update && this.fps.update(), 'function' == typeof this.afterRender && this.afterRender()), this.req = window.requestAnimationFrame(this.animationLoop);\n        }\n\n        restart() {\n          if (this.scene) for (; this.scene.children.length;) this.scene.remove(this.scene.children[0]);\n          'function' == typeof this.onRestart && this.onRestart(), this.init();\n        }\n\n        init() {\n          'function' == typeof this.onInit && this.onInit();\n        }\n\n        destroy() {\n          'function' == typeof this.onDestroy && this.onDestroy();\n          const t = window.removeEventListener;\n          t('touchstart', this.windowTouchWrapper), t('touchmove', this.windowTouchWrapper), t('scroll', this.windowMouseMoveWrapper), t('mousemove', this.windowMouseMoveWrapper), t('deviceorientation', this.windowGyroWrapper), t('resize', this.resize), window.cancelAnimationFrame(this.req), this.renderer && (this.renderer.domElement && this.el.removeChild(this.renderer.domElement), this.renderer = null, this.scene = null);\n        }\n\n      }, e.b = r.VantaBase;\n    },\n    17: function (t, e, i) {\n      'use strict';\n\n      i.r(e);\n      var s = i(1),\n          o = i(0);\n      let n = false && window.THREE;\n\n      class r extends s.b {\n        static initClass() {\n          this.prototype.ww = 100, this.prototype.hh = 80, this.prototype.waveNoise = 4;\n        }\n\n        constructor(t) {\n          n = t.THREE || n, super(t);\n        }\n\n        getMaterial() {\n          const t = {\n            color: this.options.color,\n            shininess: this.options.shininess,\n            flatShading: !0,\n            vertexColors: n.FaceColors,\n            side: n.DoubleSide\n          };\n          return new n.MeshPhongMaterial(t);\n        }\n\n        onInit() {\n          let t, e;\n          const i = this.getMaterial(),\n                s = new n.Geometry();\n\n          for (this.gg = [], t = 0; t <= this.ww; t++) for (this.gg[t] = [], e = 0; e <= this.hh; e++) {\n            const i = s.vertices.length,\n                  r = new n.Vector3(18 * (t - 0.5 * this.ww), Object(o.h)(0, this.waveNoise) - 10, 18 * (0.5 * this.hh - e));\n            s.vertices.push(r), this.gg[t][e] = i;\n          }\n\n          for (t = 1; t <= this.ww; t++) for (e = 1; e <= this.hh; e++) {\n            let i, r;\n            const h = this.gg[t][e],\n                  a = this.gg[t][e - 1],\n                  c = this.gg[t - 1][e],\n                  u = this.gg[t - 1][e - 1];\n            Object(o.g)(0, 1) ? (i = new n.Face3(u, a, c), r = new n.Face3(a, c, h)) : (i = new n.Face3(u, a, h), r = new n.Face3(u, c, h)), s.faces.push(i, r);\n          }\n\n          this.plane = new n.Mesh(s, i), this.scene.add(this.plane);\n          const r = new n.AmbientLight(16777215, 0.9);\n          this.scene.add(r);\n          const h = new n.PointLight(16777215, 0.9);\n          h.position.set(-100, 250, -100), this.scene.add(h), this.camera = new n.PerspectiveCamera(35, this.width / this.height, 50, 1e4);\n          this.cameraPosition = new n.Vector3(240, 200, 390), this.cameraTarget = new n.Vector3(140, -30, 190), this.camera.position.copy(this.cameraPosition), this.scene.add(this.camera), this.onUpdate();\n        }\n\n        onUpdate() {\n          let t;\n          this.plane.material.color.set(this.options.color), this.plane.material.shininess = this.options.shininess, this.camera.ox = this.cameraPosition.x / this.options.zoom, this.camera.oy = this.cameraPosition.y / this.options.zoom, this.camera.oz = this.cameraPosition.z / this.options.zoom, null != this.controls && this.controls.update();\n          const e = this.camera;\n          Math.abs(e.tx - e.position.x) > 0.01 && (t = e.tx - e.position.x, e.position.x += 0.02 * t), Math.abs(e.ty - e.position.y) > 0.01 && (t = e.ty - e.position.y, e.position.y += 0.02 * t), Math.abs(e.tz - e.position.z) > 0.01 && (t = e.tz - e.position.z, e.position.z += 0.02 * t), e.lookAt(this.cameraTarget);\n\n          for (let t = 0; t < this.plane.geometry.vertices.length; t++) {\n            const e = this.plane.geometry.vertices[t];\n\n            if (e.oy) {\n              const t = this.options.waveSpeed,\n                    i = Math.sqrt(t) * Math.cos(-e.x - 0.7 * e.z),\n                    s = Math.sin(t * this.t * 0.02 - t * e.x * 0.025 + t * e.z * 0.015 + i),\n                    o = Math.pow(s + 1, 2) / 4;\n              e.y = e.oy + o * this.options.waveHeight;\n            } else e.oy = e.y;\n          }\n\n          this.plane.geometry.dynamic = !0, this.plane.geometry.computeFaceNormals(), this.plane.geometry.verticesNeedUpdate = !0, this.plane.geometry.normalsNeedUpdate = !0, this.wireframe && (this.wireframe.geometry.fromGeometry(this.plane.geometry), this.wireframe.geometry.computeFaceNormals());\n        }\n\n        onMouseMove(t, e) {\n          const i = this.camera;\n          return i.oy || (i.oy = i.position.y, i.ox = i.position.x, i.oz = i.position.z), i.tx = i.ox + 100 * (t - 0.5) / this.options.zoom, i.ty = i.oy + -100 * (e - 0.5) / this.options.zoom, i.tz = i.oz + -50 * (t - 0.5) / this.options.zoom;\n        }\n\n      }\n\n      r.prototype.defaultOptions = {\n        color: 21896,\n        shininess: 30,\n        waveHeight: 15,\n        waveSpeed: 1,\n        zoom: 1\n      }, r.initClass(), e.default = s.a.register('WAVES', r);\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"script"}