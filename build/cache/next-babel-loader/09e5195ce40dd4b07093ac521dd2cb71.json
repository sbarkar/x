{"ast":null,"code":"import _toConsumableArray from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/sbarkar/Documents/projects/x/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar saveState = function saveState(session, state) {\n  return _objectSpread(_objectSpread({}, session), {}, {\n    states: _objectSpread(_objectSpread({}, session.states), {}, _defineProperty({}, state.id, state)),\n    stackOrder: session.stackOrder.filter(function (stackId) {\n      return stackId !== state.id;\n    })\n  });\n};\n\nvar changeForground = function changeForground(session, foregroundId) {\n  return _objectSpread(_objectSpread({}, session), {}, {\n    foregroundId: foregroundId,\n    stackOrder: [].concat(_toConsumableArray(foregroundId ? [foregroundId] : []), _toConsumableArray(session.stackOrder.filter(function (stackId) {\n      return stackId !== foregroundId;\n    })))\n  });\n};\n\nexport var sessionReducer = function sessionReducer(session, _ref) {\n  var foregroundId = _ref.foregroundId,\n      state = _ref.state;\n  if (state) return saveState(session, state);\n  if (typeof foregroundId === 'string') return changeForground(session, foregroundId);\n  return session;\n};","map":null,"metadata":{},"sourceType":"module"}